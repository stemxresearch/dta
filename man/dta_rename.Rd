% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dta_rename.R
\name{dta_rename}
\alias{dta_rename}
\title{Rename columns in a data frame and tibble based on a dictionary}
\usage{
dta_rename(dat, dict = NULL, .oldnames, .newnames)
}
\arguments{
\item{dat}{A data frame whose columns are to be renamed.}

\item{dict}{A data frame serving as the dictionary, containing the old and
new variable names.}

\item{.oldnames}{A column in \code{dict} specifying the old variable names.}

\item{.newnames}{A column in \code{dict} specifying the new variable names.}
}
\value{
A tibble with renamed columns.
}
\description{
\code{dta_rename()} renames columns in a data frame \code{dat} using
a dictionary \code{dict}. The dictionary specifies the old column names and
their corresponding new names.
}
\details{
The function checks the following:
\itemize{
\item Both \code{dat} and \code{dict} are data frames or tibbles.
\item Columns specified in \code{.oldnames} exist in \code{dict}.
\item The new variable names \code{.newnames} are unique.
\item There is no overlap between \code{.oldnames} and \code{.newnames} to avoid conflicts.
}

If any issues are detected, an error or warning is raised to ensure proper
processing.
}
\examples{
data("data_bmi")
dta_gtable(data_bmi)

# Rename the columns `age` and `weight` to `age_in_years`
# and `weight_in_kgs`

result <- dta_rename(
  dat = data_bmi,
  .oldnames = c("age", "weight"),
  .newnames = c("age_in_years", "weight_in_kgs")
)

dta_gtable(result)

# Rename all columns to `unique_id`, `age_in_years`,
# `height_in_meters` and `weight_in_kgs`. In this case,

new_names <- c(
  "unique_id",
  "age_in_years",
  "height_in_meters",
  "weight_in_kgs"
)
result2 <- dta_rename(
  dat = data_bmi,
  .oldnames = NA,
  .newnames = new_names
)

dta_gtable(result2)

# Rename from a dictionary - Begin by loading the dataset
# with columns to be renamed.

data("data_rename")
dta_gtable(head(data_rename))

# The dictionary with the columns `oldnames` and
# `newnames` representing the old and new variable names
# respectively

data("dict_rename")
dta_gtable(dict_rename)

# Perform the renaming

result3 <- dta_rename(
  dat = data_rename,
  dict = dict_rename,
  .oldnames = old,
  .newnames = new
)

dta_gtable(result3)

}
